name: GitHub Actions CD
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    tags:
      - v2
      - v1.*

env:
  IMAGE_PREFIX: "marcinator"

jobs:
  Test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet '8.0.x'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version
      - name: Test the project before packing
        run: dotnet test backendTest
  Build:
    strategy:
      matrix:
        file: [ "backend", "frontend" ]
    runs-on: ubuntu-latest
    needs: Test

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub Registry
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,latest
            type=schedule
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch
            type=sha
            type=edge,branch=main
          images: ${{ env.IMAGE_PREFIX }}/ajax-${{ matrix.file }}
          flavor: |
            latest=auto
        #https://github.com/docker/build-push-action
      - name: Get short sha as metadata-action does it
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.file }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "COMMIT_SHA_ARG=${{ steps.vars.outputs.sha_short }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [Build]
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: <your kubeconfig>
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up kubectl
        run: cat $KUBECONFIG

      - name: Get short sha as metadata-action does it
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy to the Kubernetes cluster
        uses: Azure/k8s-deploy@v5
        with:
          namespace: ajax
          manifests: |
            kubernetes/Backend.yaml
            kubernetes/Frontend.yaml
          images: |
            ${{ env.IMAGE_PREFIX }}/ajax-backend:sha-${{ steps.vars.outputs.sha_short }}
            ${{ env.IMAGE_PREFIX }}/ajax-frontend:sha-${{ steps.vars.outputs.sha_short }}
          skip-tls-verify: true